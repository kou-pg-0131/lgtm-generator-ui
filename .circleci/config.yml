version: 2.1

orbs:
  slack: circleci/slack@3.4.2

executors:
  awscli:
    docker:
      - image: amazon/aws-cli:2.0.61
  terraform:
    docker:
      - image: hashicorp/terraform:0.13.5

commands:
  terraform:
    parameters:
      stage:
        type: string
      command:
        type: string
    steps:
      - run:
          name: terraform << parameters.command >> - << parameters.stage >>
          command: |
            cd ~/project/terraform/envs/<< parameters.stage >>
            terraform << parameters.command >>

  yarn_install:
    steps:
      - restore_cache:
          key: v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - run: yarn install --check-files
      - save_cache:
          key: v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - node_modules

  setup_aws_config:
    steps:
      - run:
          name: create aws/credentials aws/config
          command: |
            mkdir -p ~/.aws
            echo '[default]'                                       > ~/.aws/credentials
            echo "aws_access_key_id=${AWS_ACCESS_KEY_ID}"         >> ~/.aws/credentials
            echo "aws_secret_access_key=${AWS_SECRET_ACCESS_KEY}" >> ~/.aws/credentials
            echo '[default]'                                       > ~/.aws/config
            echo "region = us-east-1"                             >> ~/.aws/config

jobs:
  terraform_plan:
    executor: terraform
    steps:
      - checkout
      - run: apk --update add curl bash
      - setup_aws_config
      - terraform:
          stage: dev
          command: init
      - terraform:
          stage: dev
          command: plan
      - slack/status

  terraform_apply:
    executor: terraform
    parameters:
      stage:
        type: string
    steps:
      - checkout
      - run: apk --update add curl bash
      - setup_aws_config
      - terraform:
          stage: << parameters.stage >>
          command: init
      - terraform:
          stage: << parameters.stage >>
          command: apply -auto-approve
      - slack/status

  deploy:
    executor: awscli
    parameters:
      stage:
        type: string
    steps:
      - checkout
      - setup_aws_config
      - run: yum -y update
      - run: yum -y install wget tar gzip
      - run:
          name: install nodejs
          command: |
            wget --quiet -O- https://rpm.nodesource.com/setup_12.x | bash -
            yum -y install nodejs
      - run:
          name: install yarn
          command: |
            echo 'export PATH=$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH' >> $BASH_ENV
            wget --quiet -O- https://yarnpkg.com/install.sh | bash -s -- --version 1.22.5
      - yarn_install
      - run: yarn run build:<< parameters.stage >>
      - run:
          name: upload files to s3
          command: aws s3 sync ./build s3://lgtm-generator-ui-<< parameters.stage >>-deployment/ --delete
      - slack/status


workflows:
  build:
    jobs:
      - terraform_plan

      - slack/approval-notification:
          requires: [terraform_plan]
      - approval_deploy:
          type: approval
          requires: [terraform_plan]

      - terraform_apply:
          name: terraform_apply_dev
          stage: dev
          requires: [approval_deploy]
      - deploy:
          name: deploy_dev
          stage: dev
          requires: [terraform_apply_dev]
